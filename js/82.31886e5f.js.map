{"version":3,"file":"js/82.31886e5f.js","mappings":"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","sources":["webpack://bds/./src/components/QuoteSection.vue","webpack://bds/./src/components/QuoteSection.vue?db42","webpack://bds/../src/shared/constants.ts","webpack://bds/../src/shared/injectSymbols.ts","webpack://bds/../src/shared/slideRegistry.ts","webpack://bds/../src/utils/calculateAverage.ts","webpack://bds/../src/utils/createCloneSlides.ts","webpack://bds/../src/utils/disableChildrenTabbing.ts","webpack://bds/../src/utils/except.ts","webpack://bds/../src/utils/getDraggedSlidesCount.ts","webpack://bds/../src/utils/getNumberInRange.ts","webpack://bds/../src/utils/getScaleMultipliers.ts","webpack://bds/../src/utils/getSnapAlignOffset.ts","webpack://bds/../src/utils/i18nFormatter.ts","webpack://bds/../src/utils/mapNumberToRange.ts","webpack://bds/../src/utils/throttle.ts","webpack://bds/../src/utils/toCssValue.ts","webpack://bds/../src/components/ARIA/ARIA.ts","webpack://bds/../src/composables/useDrag.ts","webpack://bds/../src/composables/useHover.ts","webpack://bds/../src/composables/useWheel.ts","webpack://bds/../src/components/Carousel/carouselProps.ts","webpack://bds/../src/components/Carousel/Carousel.ts","webpack://bds/../src/components/Icon/Icon.types.ts","webpack://bds/../src/components/Icon/Icon.ts","webpack://bds/../src/components/Navigation/Navigation.ts","webpack://bds/../src/components/Slide/Slide.ts","webpack://bds/../src/components/Pagination/Pagination.ts","webpack://bds/./src/components/SketchSlider.vue","webpack://bds/./src/components/SketchSlider.vue?c633","webpack://bds/./src/views/HomeView.vue"],"sourcesContent":["<template>\n    <div class=\"items-center justify-center\">\n        <blockquote class=\"p-4 my-4 border-none mt-[-15px] font-mono\">\n            <div class=\"hidden\">\n                {{ num = Math.floor(Math.random() * this.items.length) }}\n            </div>\n            <div class=\"text-center justify-items-center text-xl italic font-medium leading-relaxed mb-[1.5%]\">\n                <div class=\"flex justify-center\">\n                    <svg class=\"h-5 w-5 mr-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 300 300\"><path d=\"M113.51 100.6 88.28 55.97C32.35 87.58 24 123.13 24 141.51v102.53h102.53V141.51H75.26c0-8.9 10.02-24.96 38.25-40.91zm111.23 40.91c0-8.9 10.02-24.96 38.24-40.91l-25.22-44.63c-55.93 31.61-64.28 67.16-64.28 85.54v102.53H276V141.51h-51.26z\" fill=\"%23FFF\"></path></svg>\n                    {{ items [num][0] }}\n                </div>\n            </div>\n            <div class=\"text-center\">\n                <span class=\"text-l italic font-medium rounded leading-relaxed border-2 border-solid py-[0.5%] px-[1%]\">\n                    {{ items [num][1] }}\n                </span>\n            </div>\n        </blockquote>\n    </div>\n</template>\n\n<script>\n// import { random } from 'core-js/core/number';\n\n    export default {\n        data () {\n            return {\n                items:[\n                    [\"Architecture is a visual art, and the buildings speak for themselves.\",\"Julia Morgan\"],\n                    [\"Architecture belongs to culture, not to civilization.\",\"Alvar Aalto\"],\n                    [\"Architecture is an expression of values.\",\"Norman Foster\"],\n                    [\"Form follows function.\",\"Louis Sullivan\"],\n                    [\"There are 360 degrees, so why stick to one?.\",\"Zaha Hadid\"],\n                    [\"Less is more.\",\"Mies van der Rohe\"],\n                    [\"Architecture is not a static building but a living organism that grows, evolves, and breathes with life.\",\"Balkrishna Vithaldas Doshi\"],\n                    [\"A great building must begin with the unmeasurable.\",\"Loius Kahn\"],\n                    [\"Architecture is about capturing light, framing the sky, and choreographing spaces to evoke emotion.\",\"Sanjay Mohe\"]\n                    ]\n            };\n        }\n    }\n</script>","import { render } from \"./QuoteSection.vue?vue&type=template&id=970d4f30\"\nimport script from \"./QuoteSection.vue?vue&type=script&lang=js\"\nexport * from \"./QuoteSection.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { CarouselConfig } from './types'\n\nexport const BREAKPOINT_MODE_OPTIONS = ['viewport', 'carousel'] as const\n\nexport const DIR_MAP = {\n  'bottom-to-top': 'btt',\n  'left-to-right': 'ltr',\n  'right-to-left': 'rtl',\n  'top-to-bottom': 'ttb',\n} as const\n\nexport const DIR_OPTIONS = [\n  'ltr',\n  'left-to-right',\n  'rtl',\n  'right-to-left',\n  'ttb',\n  'top-to-bottom',\n  'btt',\n  'bottom-to-top',\n] as const\n\nexport const I18N_DEFAULT_CONFIG = {\n  ariaGallery: 'Gallery',\n  ariaNavigateToPage: 'Navigate to page {slideNumber}',\n  ariaNavigateToSlide: 'Navigate to slide {slideNumber}',\n  ariaNextSlide: 'Navigate to next slide',\n  ariaPreviousSlide: 'Navigate to previous slide',\n  iconArrowDown: 'Arrow pointing downwards',\n  iconArrowLeft: 'Arrow pointing to the left',\n  iconArrowRight: 'Arrow pointing to the right',\n  iconArrowUp: 'Arrow pointing upwards',\n  itemXofY: 'Item {currentSlide} of {slidesCount}',\n} as const\n\nexport const NORMALIZED_DIR_OPTIONS = Object.values(DIR_MAP)\n\nexport const SLIDE_EFFECTS = ['slide', 'fade'] as const\n\nexport const SNAP_ALIGN_OPTIONS = [\n  'center',\n  'start',\n  'end',\n  'center-even',\n  'center-odd',\n] as const\n\nexport const DEFAULT_MOUSE_WHEEL_THRESHOLD = 10\nexport const DEFAULT_DRAG_THRESHOLD = 0.3\n\nexport const DEFAULT_CONFIG: CarouselConfig = {\n  autoplay: 0,\n  breakpointMode: BREAKPOINT_MODE_OPTIONS[0],\n  breakpoints: undefined,\n  dir: DIR_OPTIONS[0],\n  enabled: true,\n  gap: 0,\n  height: 'auto',\n  i18n: I18N_DEFAULT_CONFIG,\n  ignoreAnimations: false,\n  itemsToScroll: 1,\n  itemsToShow: 1,\n  modelValue: 0,\n  mouseDrag: true,\n  mouseWheel: false,\n  pauseAutoplayOnHover: false,\n  preventExcessiveDragging: false,\n  slideEffect: SLIDE_EFFECTS[0],\n  snapAlign: SNAP_ALIGN_OPTIONS[0],\n  touchDrag: true,\n  transition: 300,\n  wrapAround: false,\n}\n","import { InjectionKey } from 'vue'\n\nimport { InjectedCarousel } from '@/components/Carousel'\n\n// Use a symbol for inject provide to avoid any kind of collision with another lib\n// https://vuejs.org/guide/components/provide-inject#working-with-symbol-keys\nexport const injectCarousel = Symbol('carousel') as InjectionKey<\n  InjectedCarousel | undefined\n>\n","import { ComponentInternalInstance, EmitFn, shallowReactive } from 'vue'\n\nconst createSlideRegistry = (emit: EmitFn) => {\n  const slides = shallowReactive<Array<ComponentInternalInstance>>([])\n\n  const updateSlideIndexes = (startIndex?: number) => {\n    if (startIndex !== undefined) {\n      slides.slice(startIndex).forEach((slide, offset) => {\n        slide.exposed?.setIndex(startIndex + offset)\n      })\n    } else {\n      slides.forEach((slide, index) => {\n        slide.exposed?.setIndex(index)\n      })\n    }\n  }\n\n  return {\n    cleanup: () => {\n      slides.splice(0, slides.length)\n    },\n\n    getSlides: () => slides,\n\n    registerSlide: (slide: ComponentInternalInstance, index?: number) => {\n      if (!slide) return\n\n      if (slide.props.isClone) {\n        return\n      }\n\n      const slideIndex = index ?? slides.length\n      slides.splice(slideIndex, 0, slide)\n      updateSlideIndexes(slideIndex)\n      emit('slide-registered', { slide, index: slideIndex })\n    },\n\n    unregisterSlide: (slide: ComponentInternalInstance) => {\n      const slideIndex = slides.indexOf(slide)\n      if (slideIndex === -1) return\n\n      emit('slide-unregistered', { slide, index: slideIndex })\n\n      slides.splice(slideIndex, 1)\n      updateSlideIndexes(slideIndex)\n    },\n  }\n}\n\nexport type SlideRegistry = ReturnType<typeof createSlideRegistry>\n\nexport { createSlideRegistry }\n","export function calculateAverage(numbers: number[]) {\n  if (numbers.length === 0) return 0\n  const sum = numbers.reduce((acc, num) => acc + num, 0)\n  return sum / numbers.length\n}\n","import { cloneVNode, ComponentInternalInstance, VNode } from 'vue'\n\ntype CreateCloneSlidesArgs = {\n  slides: Array<ComponentInternalInstance>\n  position: 'before' | 'after'\n  toShow: number\n}\n\nexport function createCloneSlides({ slides, position, toShow }: CreateCloneSlidesArgs) {\n  const clones: VNode[] = []\n  const isBefore = position === 'before'\n  const start = isBefore ? -toShow : 0\n  const end = isBefore ? 0 : toShow\n\n  if (slides.length <= 0) {\n    return clones\n  }\n\n  for (let i = start; i < end; i++) {\n    const index = isBefore ? i : i + slides.length\n    const props = {\n      index,\n      isClone: true,\n      id: undefined, // Make sure we don't duplicate the id which would be invalid html\n      key: `clone-${position}-${i}`,\n    }\n    const vnode = slides[((i % slides.length) + slides.length) % slides.length].vnode\n    const clone = cloneVNode(vnode, props)\n    clone.el = null\n    clones.push(clone)\n  }\n\n  return clones\n}\n","import { VNode } from 'vue'\n\nconst FOCUSABLE_ELEMENTS_SELECTOR =\n  'a[href], button, input, textarea, select, details, [tabindex]:not([tabindex=\"-1\"])'\n\n/**\n * Disables keyboard tab navigation for all focusable child elements\n * @param node Vue virtual node containing the elements to disable\n */\nexport function disableChildrenTabbing(node: VNode) {\n  if (!node.el || !(node.el instanceof Element)) {\n    return\n  }\n\n  const elements = node.el.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR)\n\n  for (const el of elements) {\n    if (\n      el instanceof HTMLElement &&\n      !el.hasAttribute('disabled') &&\n      el.getAttribute('aria-hidden') !== 'true'\n    ) {\n      el.setAttribute('tabindex', '-1')\n    }\n  }\n}\n","\n/** Useful function to destructure props without triggering reactivity for certain keys */\nexport function except<Obj extends object, Keys extends string>(obj: Obj, keys: Keys[]): Omit<Obj, Keys> {\n  return (Object.keys(obj).filter((k) => !(keys as string[]).includes(k)) as Array<Exclude<keyof Obj, Keys>>)\n    .reduce((acc, key) => (acc[key] = obj[key], acc), {} as Omit<Obj, Keys>)\n}","type DragParams = {\n  isVertical: boolean\n  isReversed: boolean\n  dragged: { x: number; y: number }\n  effectiveSlideSize: number\n  threshold: number\n}\n\n/**\n * Calculates the number of slides to move based on drag movement\n * @param params Configuration parameters for drag calculation\n * @returns Number of slides to move (positive or negative)\n */\nexport function getDraggedSlidesCount(params: DragParams): number {\n  const { isVertical, isReversed, dragged, effectiveSlideSize, threshold } = params\n\n  // Get drag value based on direction\n  const dragValue = isVertical ? dragged.y : dragged.x\n\n  // If no drag, return +0 explicitly\n  if (dragValue === 0) return 0\n\n  const dragRatio = dragValue / effectiveSlideSize\n  const absRatio = Math.abs(dragRatio)\n\n  // If below the threshold, consider it no movement\n  if (absRatio < threshold) return 0\n  \n  // For drags less than a full slide, move one slide in the drag direction\n  // For drags of a full slide or more, move the corresponding number of slides\n  const slidesDragged = absRatio < 1 ? Math.sign(dragRatio) : Math.round(dragRatio)\n\n  return isReversed ? slidesDragged : -slidesDragged\n}\n","type GetNumberInRangeArgs = {\n  val: number\n  max: number\n  min: number\n}\n\nexport function getNumberInRange({ val, max, min }: GetNumberInRangeArgs): number {\n  if (max < min) {\n    return val\n  }\n  return Math.min(Math.max(val, isNaN(min) ? val : min), isNaN(max) ? val : max)\n}\n","export function getTransformValues(el: HTMLElement) {\n  const { transform } = window.getComputedStyle(el)\n\n  //add sanity check\n  return transform\n    .split(/[(,)]/)\n    .slice(1, -1)\n    .map((v) => parseFloat(v))\n}\n\nexport type ScaleMultipliers = {\n  widthMultiplier: number\n  heightMultiplier: number\n}\nexport function getScaleMultipliers(\n  transformElements: Set<HTMLElement>\n): ScaleMultipliers {\n  let widthMultiplier = 1\n  let heightMultiplier = 1\n  transformElements.forEach((el) => {\n    const transformArr = getTransformValues(el)\n\n    if (transformArr.length === 6) {\n      widthMultiplier /= transformArr[0]\n      heightMultiplier /= transformArr[3]\n    }\n  })\n\n  return { widthMultiplier, heightMultiplier }\n}\n","import { SnapAlign } from '@/shared'\n\ntype SnapAlignOffsetParams = {\n  align: SnapAlign\n  slideSize?: number\n  viewportSize?: number\n  itemsToShow?: number\n}\n\n/**\n * Calculates the snap align offset for a carousel item based on items to show.\n * Returns the number of slides to offset.\n *\n * @param align - The alignment type.\n * @param itemsToShow - The number of items to show.\n * @returns The calculated offset.\n */\nfunction getSnapAlignOffsetByItemsToShow(align: SnapAlign, itemsToShow: number): number {\n  switch (align) {\n    case 'start':\n      return 0\n    case 'center':\n    case 'center-odd':\n      return (itemsToShow - 1) / 2\n    case 'center-even':\n      return (itemsToShow - 2) / 2\n    case 'end':\n      return itemsToShow - 1\n    default:\n      return 0\n  }\n}\n\n/**\n * Calculates the snap align offset for a carousel item based on slide and viewport size.\n * Returns the real width to offset.\n *\n * @param align - The alignment type.\n * @param slideSize - The size of the slide.\n * @param viewportSize - The size of the viewport.\n * @returns The calculated offset.\n */\nfunction getSnapAlignOffsetBySlideAndViewport(\n  align: SnapAlign,\n  slideSize: number,\n  viewportSize: number\n): number {\n  switch (align) {\n    case 'start':\n      return 0\n    case 'center':\n    case 'center-odd':\n      return (viewportSize - slideSize) / 2\n    case 'center-even':\n      return viewportSize / 2 - slideSize\n    case 'end':\n      return viewportSize - slideSize\n    default:\n      return 0\n  }\n}\n\n/**\n * Calculates the snap align offset for a carousel item.\n *\n * @param params - The parameters for calculating the offset.\n * @returns The calculated offset.\n */\nexport function getSnapAlignOffset({\n  slideSize,\n  viewportSize,\n  align,\n  itemsToShow,\n}: SnapAlignOffsetParams): number {\n  if (itemsToShow !== undefined) {\n    return getSnapAlignOffsetByItemsToShow(align, itemsToShow)\n  }\n  if (slideSize !== undefined && viewportSize !== undefined) {\n    return getSnapAlignOffsetBySlideAndViewport(align, slideSize, viewportSize)\n  }\n\n  return 0\n}\n","export function i18nFormatter(string = '', values = {}) {\n  return Object.entries(values).reduce(\n    (acc, [key, value]) => acc.replace(`{${key}}`, String(value)),\n    string\n  )\n}\n","type MapNumberToRangeArgs = {\n  val: number\n  max: number\n  min?: number\n}\n\nexport function mapNumberToRange({ val, max, min = 0 }: MapNumberToRangeArgs): number {\n  const mod = max - min + 1\n  return ((((val - min) % mod) + mod) % mod) + min\n}\n","/**\n * Returns a throttled version of the function using requestAnimationFrame.\n *\n * @param fn - The function to throttle.\n * @param ms - The number of milliseconds to wait for the throttled function to be called again\n */\nexport function throttle<Args extends Array<unknown>>(\n  fn: (...args: Args) => void,\n  ms = 0\n): { (...args: Args): void; cancel: () => void } {\n  let isThrottled = false\n  let start = 0\n  let frameId: number | null = null\n\n  function throttled(...args: Args) {\n    if (isThrottled) return\n\n    isThrottled = true\n    const step = () => {\n      frameId = requestAnimationFrame((time) => {\n        const elapsed = time - start\n        if (elapsed > ms) {\n          start = time\n          fn(...args)\n          isThrottled = false\n        } else {\n          step()\n        }\n      })\n    }\n    step()\n  }\n\n  throttled.cancel = () => {\n    if (frameId) {\n      cancelAnimationFrame(frameId)\n      frameId = null\n      isThrottled = false\n    }\n  }\n\n  return throttled\n}\n","/**\n * Converts a value to a CSS-compatible string.\n * @param value - The value to convert.\n * @returns The CSS-compatible string.\n **/\nexport function toCssValue(\n  value?: string | number,\n  unit: string = 'px'\n): string | undefined {\n  if (value === null || value === undefined || value === '') {\n    return undefined\n  }\n\n  if (typeof value === 'number' || parseFloat(value).toString() === value) {\n    return `${value}${unit}`\n  }\n  return value\n}\n","import { defineComponent, h, inject } from 'vue'\n\nimport { injectCarousel } from '@/shared'\nimport { i18nFormatter } from '@/utils'\n\nexport const ARIA = defineComponent({\n  name: 'CarouselAria',\n  setup() {\n    const carousel = inject(injectCarousel)\n\n    if (!carousel) {\n      return () => ''\n    }\n\n    return () =>\n      h(\n        'div',\n        {\n          class: ['carousel__liveregion', 'carousel__sr-only'],\n          'aria-live': 'polite',\n          'aria-atomic': 'true',\n        },\n        i18nFormatter(carousel.config.i18n['itemXofY'], {\n          currentSlide: carousel.currentSlide + 1,\n          slidesCount: carousel.slidesCount,\n        })\n      )\n  },\n})\n","import { ref, reactive, computed, Ref } from 'vue'\n\nimport { throttle } from '@/utils'\n\nexport type DragEventData = {\n  deltaX: number\n  deltaY: number\n  isTouch: boolean\n}\nexport interface UseDragOptions {\n  isSliding: boolean | Ref<boolean>\n  onDrag?: ({ deltaX, deltaY, isTouch }: DragEventData) => void\n  onDragStart?: () => void\n  onDragEnd?: () => void\n}\n\nexport function useDrag(options: UseDragOptions) {\n  let isTouch = false\n  const startPosition = { x: 0, y: 0 }\n  const dragged = reactive({ x: 0, y: 0 })\n  const isDragging = ref(false)\n\n  const { isSliding } = options\n\n  const sliding = computed(() => {\n    return typeof isSliding === 'boolean' ? isSliding : isSliding.value\n  })\n\n  const handleDragStart = (event: MouseEvent | TouchEvent): void => {\n    // Prevent drag initiation on input elements or if already sliding\n    const targetTagName = (event.target as HTMLElement).tagName\n    if (['INPUT', 'TEXTAREA', 'SELECT'].includes(targetTagName) || sliding.value) {\n      return\n    }\n\n    isTouch = event.type === 'touchstart'\n\n    if (isTouch && (event as TouchEvent).touches.length > 1) {\n      // If there is more than 1 finger on the screen, avoid drag start (this allows user to pinch zoom)\n      return\n    } else if (!isTouch) {\n      event.preventDefault()\n      if ((event as MouseEvent).button !== 0) {\n        return\n      }\n    }\n\n    startPosition.x = isTouch\n      ? (event as TouchEvent).touches[0].clientX\n      : (event as MouseEvent).clientX\n    startPosition.y = isTouch\n      ? (event as TouchEvent).touches[0].clientY\n      : (event as MouseEvent).clientY\n\n    const moveEvent = isTouch ? 'touchmove' : 'mousemove'\n    const endEvent = isTouch ? 'touchend' : 'mouseup'\n    document.addEventListener(moveEvent, handleDrag, { passive: false })\n    document.addEventListener(endEvent, handleDragEnd, { passive: true })\n\n    options.onDragStart?.()\n  }\n\n  const handleDrag = throttle((event: TouchEvent | MouseEvent): void => {\n    if (isTouch && (event as TouchEvent).touches.length > 1) {\n      return\n    }\n\n    isDragging.value = true\n\n    const currentX = isTouch\n      ? (event as TouchEvent).touches[0].clientX\n      : (event as MouseEvent).clientX\n    const currentY = isTouch\n      ? (event as TouchEvent).touches[0].clientY\n      : (event as MouseEvent).clientY\n\n    dragged.x = currentX - startPosition.x\n    dragged.y = currentY - startPosition.y\n\n    options.onDrag?.({ deltaX: dragged.x, deltaY: dragged.y, isTouch })\n  })\n\n  const handleDragEnd = (): void => {\n    handleDrag.cancel()\n\n    const draggedDistance = Math.abs(dragged.x) + Math.abs(dragged.y);\n\n    if (!isTouch && draggedDistance > 10) {\n      window.addEventListener('click', (e: MouseEvent) => {\n        e.preventDefault()\n        e.stopPropagation()\n      }, { once: true, capture: true })\n    }\n\n    options.onDragEnd?.()\n\n    dragged.x = 0\n    dragged.y = 0\n    isDragging.value = false\n\n    const moveEvent = isTouch ? 'touchmove' : 'mousemove'\n    const endEvent = isTouch ? 'touchend' : 'mouseup'\n    document.removeEventListener(moveEvent, handleDrag)\n    document.removeEventListener(endEvent, handleDragEnd)\n  }\n\n  return {\n    dragged,\n    isDragging,\n    handleDragStart,\n  }\n}\n","import { ref } from 'vue'\n\nexport function useHover() {\n  const isHover = ref(false)\n\n  const handleMouseEnter = (): void => {\n    isHover.value = true\n  }\n\n  const handleMouseLeave = (): void => {\n    isHover.value = false\n  }\n\n  return {\n    isHover,\n    handleMouseEnter,\n    handleMouseLeave,\n  }\n}\n","import { ComputedRef, Ref, computed } from 'vue'\n\nimport { CarouselConfig } from '@/shared'\nimport { DEFAULT_MOUSE_WHEEL_THRESHOLD } from '@/shared/constants'\n\nexport type WheelEventData = {\n  deltaX: number\n  deltaY: number\n  isScrollingForward: boolean\n}\n\nexport type UseWheelOptions = {\n  isVertical: boolean | ComputedRef<boolean>\n  isSliding: boolean | Ref<boolean>\n  config: CarouselConfig\n  onWheel?: (data: WheelEventData) => void\n}\n\nexport function useWheel(options: UseWheelOptions) {\n  const { isVertical, isSliding, config } = options\n\n  // Create computed values to handle both reactive and non-reactive inputs\n  const vertical = computed(() => {\n    return typeof isVertical === 'boolean' ? isVertical : isVertical.value\n  })\n\n  const sliding = computed(() => {\n    return typeof isSliding === 'boolean' ? isSliding : isSliding.value\n  })\n\n  const handleScroll = (event: WheelEvent): void => {\n    event.preventDefault()\n\n    if (!config.mouseWheel || sliding.value) {\n      return\n    }\n\n    // Add sensitivity threshold to prevent small movements from triggering navigation\n    const threshold =\n      typeof config.mouseWheel === 'object'\n        ? (config.mouseWheel.threshold ?? DEFAULT_MOUSE_WHEEL_THRESHOLD)\n        : DEFAULT_MOUSE_WHEEL_THRESHOLD\n\n    // Determine scroll direction\n    const deltaY = Math.abs(event.deltaY) > threshold ? event.deltaY : 0\n    const deltaX = Math.abs(event.deltaX) > threshold ? event.deltaX : 0\n\n    // If neither delta exceeds the threshold, don't navigate\n    if (deltaY === 0 && deltaX === 0) {\n      return\n    }\n\n    // Determine primary delta based on carousel orientation\n    const primaryDelta = vertical.value ? deltaY : deltaX\n\n    // If primaryDelta is 0, use the other delta as fallback\n    const effectiveDelta =\n      primaryDelta !== 0 ? primaryDelta : vertical.value ? deltaX : deltaY\n\n    // Positive delta means scrolling down/right\n    const isScrollingForward = effectiveDelta > 0\n\n    options.onWheel?.({ deltaX, deltaY, isScrollingForward })\n  }\n\n  return {\n    handleScroll,\n  }\n}\n","import { PropType } from 'vue'\n\nimport {\n  BREAKPOINT_MODE_OPTIONS,\n  DEFAULT_CONFIG,\n  DIR_MAP,\n  DIR_OPTIONS,\n  SLIDE_EFFECTS,\n  SNAP_ALIGN_OPTIONS,\n} from '@/shared'\n\nimport type {\n  BreakpointMode,\n  CarouselConfig,\n  Dir,\n  DragConfig,\n  NonNormalizedDir,\n  NormalizedDir,\n  SlideEffect,\n  SnapAlign,\n  WheelConfig,\n} from '@/shared'\n\nexport const carouselProps = {\n  // time to auto advance slides in ms\n  autoplay: {\n    default: DEFAULT_CONFIG.autoplay,\n    type: Number,\n  },\n  // an object to store breakpoints\n  breakpoints: {\n    default: DEFAULT_CONFIG.breakpoints,\n    type: Object as PropType<CarouselConfig['breakpoints']>,\n  },\n  // controls the breakpoint mode relative to the carousel container or the viewport\n  breakpointMode: {\n    default: DEFAULT_CONFIG.breakpointMode,\n    validator(value: BreakpointMode) {\n      return BREAKPOINT_MODE_OPTIONS.includes(value)\n    },\n  },\n  clamp: {\n    type: Boolean,\n  },\n  // control the direction of the carousel\n  dir: {\n    type: String as PropType<Dir>,\n    default: DEFAULT_CONFIG.dir,\n    validator(value: Dir, props: { height?: string }) {\n      // The value must match one of these strings\n      if (!DIR_OPTIONS.includes(value)) {\n        return false\n      }\n\n      const normalizedDir =\n        value in DIR_MAP ? DIR_MAP[value as NonNormalizedDir] : (value as NormalizedDir)\n      if (\n        ['ttb', 'btt'].includes(normalizedDir) &&\n        (!props.height || props.height === 'auto')\n      ) {\n        console.warn(\n          `[vue3-carousel]: The dir \"${value}\" is not supported with height \"auto\".`\n        )\n      }\n      return true\n    },\n  },\n  // enable/disable the carousel component\n  enabled: {\n    default: DEFAULT_CONFIG.enabled,\n    type: Boolean,\n  },\n  // control the gap between slides\n  gap: {\n    default: DEFAULT_CONFIG.gap,\n    type: Number,\n  },\n  // set carousel height\n  height: {\n    default: DEFAULT_CONFIG.height,\n    type: [Number, String],\n  },\n  // aria-labels and additional text labels\n  i18n: {\n    default: DEFAULT_CONFIG.i18n,\n    type: Object as PropType<typeof DEFAULT_CONFIG.i18n>,\n  },\n  ignoreAnimations: {\n    default: false,\n    type: [Array, Boolean, String] as PropType<CarouselConfig['ignoreAnimations']>,\n  },\n  // count of items to be scrolled\n  itemsToScroll: {\n    default: DEFAULT_CONFIG.itemsToScroll,\n    type: Number,\n  },\n  // count of items to showed per view\n  itemsToShow: {\n    default: DEFAULT_CONFIG.itemsToShow,\n    type: [Number, String],\n  },\n  // slide number number of initial slide\n  modelValue: {\n    default: undefined,\n    type: Number,\n  },\n  // toggle mouse dragging\n  mouseDrag: {\n    default: DEFAULT_CONFIG.mouseDrag,\n    type: [Boolean, Object] as PropType<boolean | DragConfig>,\n  },\n  // toggle mouse wheel scrolling\n  mouseWheel: {\n    default: DEFAULT_CONFIG.mouseWheel,\n    type: [Boolean, Object] as PropType<boolean | WheelConfig>,\n  },\n  // control mouse scroll threshold\n  mouseScrollThreshold: {\n    default: DEFAULT_CONFIG.mouseScrollThreshold,\n    type: Number,\n  },\n  pauseAutoplayOnHover: {\n    default: DEFAULT_CONFIG.pauseAutoplayOnHover,\n    type: Boolean,\n  },\n  preventExcessiveDragging: {\n    default: false,\n    type: Boolean,\n    validator(value: boolean, props: { wrapAround?: boolean }) {\n      if (value && props.wrapAround) {\n        console.warn(\n          `[vue3-carousel]: \"preventExcessiveDragging\" cannot be used with wrapAround. The setting will be ignored.`\n        )\n      }\n      return true\n    },\n  },\n  slideEffect: {\n    type: String as PropType<SlideEffect>,\n    default: DEFAULT_CONFIG.slideEffect,\n    validator(value: SlideEffect) {\n      return SLIDE_EFFECTS.includes(value)\n    },\n  },\n  // control snap position alignment\n  snapAlign: {\n    default: DEFAULT_CONFIG.snapAlign,\n    validator(value: SnapAlign) {\n      return SNAP_ALIGN_OPTIONS.includes(value)\n    },\n  },\n  // toggle touch dragging\n  touchDrag: {\n    default: DEFAULT_CONFIG.touchDrag,\n    type: [Boolean, Object] as PropType<boolean | DragConfig>,\n  },\n  // sliding transition time in ms\n  transition: {\n    default: DEFAULT_CONFIG.transition,\n    type: Number,\n  },\n  // control infinite scrolling mode\n  wrapAround: {\n    default: DEFAULT_CONFIG.wrapAround,\n    type: Boolean,\n  },\n}\n","import {\n  ComputedRef,\n  Ref,\n  SetupContext,\n  computed,\n  defineComponent,\n  h,\n  onBeforeUnmount,\n  onMounted,\n  provide,\n  reactive,\n  ref,\n  shallowReactive,\n  toRefs,\n  watch,\n  watchEffect,\n} from 'vue'\n\nimport { ARIA as ARIAComponent } from '@/components/ARIA'\nimport { DragEventData, useDrag, useHover, useWheel, WheelEventData } from '@/composables'\nimport {\n  CarouselConfig,\n  DEFAULT_CONFIG,\n  DEFAULT_DRAG_THRESHOLD,\n  DIR_MAP,\n  NonNormalizedDir,\n  NormalizedDir,\n  createSlideRegistry,\n  injectCarousel,\n} from '@/shared'\nimport {\n  ScaleMultipliers,\n  calculateAverage,\n  createCloneSlides,\n  except,\n  getDraggedSlidesCount,\n  getNumberInRange,\n  getScaleMultipliers,\n  getSnapAlignOffset,\n  mapNumberToRange,\n  throttle,\n  toCssValue,\n} from '@/utils'\n\nimport {\n  CarouselData,\n  CarouselExposed,\n  CarouselNav,\n  ElRect,\n  InjectedCarousel,\n} from './Carousel.types'\nimport { carouselProps } from './carouselProps'\n\nexport const Carousel = defineComponent({\n  name: 'VueCarousel',\n  props: carouselProps,\n  emits: [\n    'before-init',\n    'drag',\n    'init',\n    'loop',\n    'slide-end',\n    'slide-registered',\n    'slide-start',\n    'slide-unregistered',\n    'update:modelValue',\n    'wheel',\n  ],\n  setup(props: CarouselConfig, { slots, emit, expose }: SetupContext) {\n    const slideRegistry = createSlideRegistry(emit)\n    const slides = slideRegistry.getSlides()\n    const slidesCount = computed(() => slides.length)\n\n    const root: Ref<Element | null> = ref(null)\n    const viewport: Ref<Element | null> = ref(null)\n    const slideSize: Ref<number> = ref(0)\n\n    const fallbackConfig = computed(() => ({\n      ...DEFAULT_CONFIG,\n      // Avoid reactivity tracking in breakpoints and vModel which would trigger unnecessary updates\n      ...except(props, ['breakpoints', 'modelValue']),\n      i18n: { ...DEFAULT_CONFIG.i18n, ...props.i18n },\n    }))\n\n    // current active config\n    const config = shallowReactive<CarouselConfig>({ ...fallbackConfig.value })\n\n    // slides\n    const currentSlideIndex = ref(props.modelValue ?? 0)\n    const activeSlideIndex = ref(currentSlideIndex.value)\n\n    watch(currentSlideIndex, (val) => (activeSlideIndex.value = val))\n    const prevSlideIndex = ref(0)\n    const middleSlideIndex = computed(() => Math.ceil((slidesCount.value - 1) / 2))\n    const maxSlideIndex = computed(() => slidesCount.value - 1)\n    const minSlideIndex = computed(() => 0)\n\n    let autoplayTimer: ReturnType<typeof setInterval> | null = null\n    let transitionTimer: ReturnType<typeof setTimeout> | null = null\n    let resizeObserver: ResizeObserver | null = null\n\n    const effectiveSlideSize = computed(() => slideSize.value + config.gap)\n\n    const normalizedDir = computed<NormalizedDir>(() => {\n      const dir = config.dir || 'ltr'\n      return dir in DIR_MAP ? DIR_MAP[dir as NonNormalizedDir] : (dir as NormalizedDir)\n    })\n\n    const isReversed = computed(() => ['rtl', 'btt'].includes(normalizedDir.value))\n    const isVertical = computed(() => ['ttb', 'btt'].includes(normalizedDir.value))\n    const isAuto = computed(() => config.itemsToShow === 'auto')\n\n    const dimension = computed(() => (isVertical.value ? 'height' : 'width'))\n\n    function updateBreakpointsConfig(): void {\n      if (!mounted.value) {\n        return\n      }\n      // Determine the width source based on the 'breakpointMode' config\n      const widthSource =\n        (fallbackConfig.value.breakpointMode === 'carousel'\n          ? root.value?.getBoundingClientRect().width\n          : typeof window !== 'undefined'\n            ? window.innerWidth\n            : 0) || 0\n\n      const breakpointsArray = Object.keys(props.breakpoints || {})\n        .map((key) => Number(key))\n        .sort((a, b) => +b - +a)\n\n      const newConfig: Partial<CarouselConfig> = {}\n      breakpointsArray.some((breakpoint) => {\n        if (widthSource >= breakpoint) {\n          Object.assign(newConfig, props.breakpoints![breakpoint])\n          if (newConfig.i18n) {\n            Object.assign(\n              newConfig.i18n,\n              fallbackConfig.value.i18n,\n              props.breakpoints![breakpoint].i18n\n            )\n          }\n          return true\n        }\n        return false\n      })\n\n      Object.assign(config, fallbackConfig.value, newConfig)\n\n      // Validate itemsToShow\n      if (!isAuto.value) {\n        config.itemsToShow = getNumberInRange({\n          val: Number(config.itemsToShow),\n          max: props.clamp ? slidesCount.value : Infinity,\n          min: 1,\n        })\n      }\n    }\n\n    const handleResize = throttle(() => {\n      updateBreakpointsConfig()\n      updateSlidesData()\n      updateSlideSize()\n    })\n\n    const transformElements = shallowReactive<Set<HTMLElement>>(new Set())\n\n    /**\n     * Setup functions\n     */\n    const slidesRect = ref<Array<ElRect>>([])\n    function updateSlidesRectSize({\n      widthMultiplier,\n      heightMultiplier,\n    }: ScaleMultipliers): void {\n      slidesRect.value = slides.map((slide) => {\n        const rect = slide.exposed?.getBoundingRect()\n        return {\n          width: rect.width * widthMultiplier,\n          height: rect.height * heightMultiplier,\n        }\n      })\n    }\n    const viewportRect: Ref<ElRect> = ref({\n      width: 0,\n      height: 0,\n    })\n    function updateViewportRectSize({\n      widthMultiplier,\n      heightMultiplier,\n    }: ScaleMultipliers): void {\n      const rect = viewport.value?.getBoundingClientRect() || { width: 0, height: 0 }\n      viewportRect.value = {\n        width: rect.width * widthMultiplier,\n        height: rect.height * heightMultiplier,\n      }\n    }\n\n    function updateSlideSize(): void {\n      if (!viewport.value) return\n\n      const scaleMultipliers = getScaleMultipliers(transformElements)\n\n      updateViewportRectSize(scaleMultipliers)\n      updateSlidesRectSize(scaleMultipliers)\n\n      if (isAuto.value) {\n        slideSize.value = calculateAverage(\n          slidesRect.value.map((slide) => slide[dimension.value])\n        )\n      } else {\n        const itemsToShow = Number(config.itemsToShow)\n        const totalGap = (itemsToShow - 1) * config.gap\n        slideSize.value = (viewportRect.value[dimension.value] - totalGap) / itemsToShow\n      }\n    }\n\n    function updateSlidesData(): void {\n      if (!config.wrapAround && slidesCount.value > 0) {\n        currentSlideIndex.value = getNumberInRange({\n          val: currentSlideIndex.value,\n          max: maxSlideIndex.value,\n          min: minSlideIndex.value,\n        })\n      }\n    }\n\n    const ignoreAnimations = computed<false | string[]>(() => {\n      if (typeof props.ignoreAnimations === 'string') {\n        return props.ignoreAnimations.split(',')\n      } else if (Array.isArray(props.ignoreAnimations)) {\n        return props.ignoreAnimations\n      } else if (!props.ignoreAnimations) {\n        return []\n      }\n      return false\n    })\n\n    watchEffect(() => updateSlidesData())\n\n    watchEffect(() => {\n      // Call updateSlideSize when viewport is ready and track deps\n      updateSlideSize()\n    })\n\n    let animationInterval: number\n\n    const setAnimationInterval = (event: AnimationEvent) => {\n      const target = event.target as HTMLElement\n      if (\n        !target?.contains(root.value) ||\n        (Array.isArray(ignoreAnimations.value) &&\n          ignoreAnimations.value.includes(event.animationName))\n      ) {\n        return\n      }\n\n      transformElements.add(target)\n      if (!animationInterval) {\n        const stepAnimation = () => {\n          animationInterval = requestAnimationFrame(() => {\n            updateSlideSize()\n            stepAnimation()\n          })\n        }\n        stepAnimation()\n      }\n    }\n    const finishAnimation = (event: AnimationEvent | TransitionEvent) => {\n      const target = event.target as HTMLElement\n      if (target) {\n        transformElements.delete(target)\n      }\n      if (animationInterval && transformElements.size === 0) {\n        cancelAnimationFrame(animationInterval)\n        updateSlideSize()\n      }\n    }\n\n    const mounted = ref(false)\n\n    if (typeof document !== 'undefined') {\n      watchEffect(() => {\n        if (mounted.value && ignoreAnimations.value !== false) {\n          document.addEventListener('animationstart', setAnimationInterval)\n          document.addEventListener('animationend', finishAnimation)\n        } else {\n          document.removeEventListener('animationstart', setAnimationInterval)\n          document.removeEventListener('animationend', finishAnimation)\n        }\n      })\n    }\n\n    onMounted((): void => {\n      mounted.value = true\n      updateBreakpointsConfig()\n      initAutoplay()\n\n      if (root.value) {\n        resizeObserver = new ResizeObserver(handleResize)\n        resizeObserver.observe(root.value)\n      }\n\n      emit('init')\n    })\n\n    onBeforeUnmount(() => {\n      mounted.value = false\n\n      slideRegistry.cleanup()\n\n      if (transitionTimer) {\n        clearTimeout(transitionTimer)\n      }\n      if (animationInterval) {\n        cancelAnimationFrame(animationInterval)\n      }\n      if (autoplayTimer) {\n        clearInterval(autoplayTimer)\n      }\n      if (resizeObserver) {\n        resizeObserver.disconnect()\n        resizeObserver = null\n      }\n\n      if (typeof document !== 'undefined') {\n        handleBlur()\n      }\n      if (root.value) {\n        root.value.removeEventListener('transitionend', updateSlideSize)\n        root.value.removeEventListener('animationiteration', updateSlideSize)\n      }\n    })\n\n    /**\n     * Carousel Event listeners\n     */\n    const { isHover, handleMouseEnter, handleMouseLeave } = useHover()\n\n    const handleArrowKeys = throttle((event: KeyboardEvent): void => {\n      if (event.ctrlKey) return\n      switch (event.key) {\n        case 'ArrowLeft':\n        case 'ArrowUp':\n          if (isVertical.value === event.key.endsWith('Up')) {\n            if (isReversed.value) {\n              next(true)\n            } else {\n              prev(true)\n            }\n          }\n          break\n        case 'ArrowRight':\n        case 'ArrowDown':\n          if (isVertical.value === event.key.endsWith('Down')) {\n            if (isReversed.value) {\n              prev(true)\n            } else {\n              next(true)\n            }\n          }\n          break\n      }\n    }, 200)\n\n    const handleBlur = (): void => {\n      document.removeEventListener('keydown', handleArrowKeys)\n    }\n\n    const handleFocus = (): void => {\n      document.addEventListener('keydown', handleArrowKeys)\n    }\n\n    /**\n     * Autoplay\n     */\n    function initAutoplay(): void {\n      if (!config.autoplay || config.autoplay <= 0) {\n        return\n      }\n\n      autoplayTimer = setInterval(() => {\n        if (config.pauseAutoplayOnHover && isHover.value) {\n          return\n        }\n\n        next()\n      }, config.autoplay)\n    }\n\n    function resetAutoplay(): void {\n      stopAutoplay()\n      initAutoplay()\n    }\n\n    function stopAutoplay(): void {\n      if (autoplayTimer) {\n        clearInterval(autoplayTimer)\n        autoplayTimer = null\n      }\n    }\n\n    /**\n     * Navigation function\n     */\n    const isSliding = ref(false)\n\n    const onDrag = ({ deltaX, deltaY, isTouch }: DragEventData) => {\n      emit('drag', { deltaX, deltaY })\n\n      const threshold = isTouch\n        ? typeof config.touchDrag === 'object'\n          ? (config.touchDrag?.threshold ?? DEFAULT_DRAG_THRESHOLD)\n          : DEFAULT_DRAG_THRESHOLD\n        : typeof config.mouseDrag === 'object'\n          ? (config.mouseDrag?.threshold ?? DEFAULT_DRAG_THRESHOLD)\n          : DEFAULT_DRAG_THRESHOLD\n\n      const draggedSlides = getDraggedSlidesCount({\n        isVertical: isVertical.value,\n        isReversed: isReversed.value,\n        dragged: { x: deltaX, y: deltaY },\n        effectiveSlideSize: effectiveSlideSize.value,\n        threshold,\n      })\n\n      // Prevent unnecessary reactivity\n      if (draggedSlides === 0) {\n        return\n      }\n\n      activeSlideIndex.value = config.wrapAround\n        ? currentSlideIndex.value + draggedSlides\n        : getNumberInRange({\n            val: currentSlideIndex.value + draggedSlides,\n            max: maxSlideIndex.value,\n            min: minSlideIndex.value,\n          })\n    }\n\n    const onDragEnd = () => slideTo(activeSlideIndex.value)\n\n    const { dragged, isDragging, handleDragStart } = useDrag({\n      isSliding,\n      onDrag,\n      onDragEnd,\n    })\n\n    const onWheel = ({ deltaX, deltaY, isScrollingForward }: WheelEventData) => {\n      emit('wheel', { deltaX, deltaY })\n\n      if (isScrollingForward) {\n        // Scrolling down/right\n        if (isReversed.value) {\n          prev()\n        } else {\n          next()\n        }\n      } else {\n        // Scrolling up/left\n        if (isReversed.value) {\n          next()\n        } else {\n          prev()\n        }\n      }\n    }\n\n    const { handleScroll } = useWheel({\n      isVertical,\n      isSliding,\n      config,\n      onWheel,\n    })\n\n    function next(skipTransition = false): void {\n      slideTo(currentSlideIndex.value + config.itemsToScroll, skipTransition)\n    }\n\n    function prev(skipTransition = false): void {\n      slideTo(currentSlideIndex.value - config.itemsToScroll, skipTransition)\n    }\n\n    function slideTo(slideIndex: number, skipTransition = false): void {\n      if (!skipTransition && isSliding.value) {\n        return\n      }\n\n      let targetIndex = slideIndex\n      let mappedIndex = slideIndex\n\n      prevSlideIndex.value = currentSlideIndex.value\n\n      if (!config.wrapAround) {\n        targetIndex = getNumberInRange({\n          val: targetIndex,\n          max: maxSlideIndex.value,\n          min: minSlideIndex.value,\n        })\n      } else {\n        mappedIndex = mapNumberToRange({\n          val: targetIndex,\n          max: maxSlideIndex.value,\n          min: minSlideIndex.value,\n        })\n      }\n\n      emit('slide-start', {\n        slidingToIndex: slideIndex,\n        currentSlideIndex: currentSlideIndex.value,\n        prevSlideIndex: prevSlideIndex.value,\n        slidesCount: slidesCount.value,\n      })\n\n      stopAutoplay()\n      isSliding.value = true\n\n      currentSlideIndex.value = targetIndex\n      if (mappedIndex !== targetIndex) {\n        modelWatcher.pause()\n      }\n      emit('update:modelValue', mappedIndex)\n\n      const transitionCallback = (): void => {\n        if (config.wrapAround && mappedIndex !== targetIndex) {\n          modelWatcher.resume()\n\n          currentSlideIndex.value = mappedIndex\n          emit('loop', {\n            currentSlideIndex: currentSlideIndex.value,\n            slidingToIndex: slideIndex,\n          })\n        }\n\n        emit('slide-end', {\n          currentSlideIndex: currentSlideIndex.value,\n          prevSlideIndex: prevSlideIndex.value,\n          slidesCount: slidesCount.value,\n        })\n\n        isSliding.value = false\n        resetAutoplay()\n      }\n\n      transitionTimer = setTimeout(transitionCallback, config.transition)\n    }\n\n    function restartCarousel(): void {\n      updateBreakpointsConfig()\n      updateSlidesData()\n      updateSlideSize()\n      resetAutoplay()\n    }\n\n    // Update the carousel on props change\n    watch(\n      () => [fallbackConfig.value, props.breakpoints],\n      () => updateBreakpointsConfig(),\n      { deep: true }\n    )\n\n    watch(\n      () => props.autoplay,\n      () => resetAutoplay()\n    )\n\n    // Handle changing v-model value\n    const modelWatcher = watch(\n      () => props.modelValue,\n      (val) => {\n        if (val === currentSlideIndex.value) {\n          return\n        }\n        slideTo(Number(val), true)\n      }\n    )\n\n    // Init carousel\n    emit('before-init')\n\n    const clonedSlidesCount = computed(() => {\n      if (!config.wrapAround) {\n        return { before: 0, after: 0 }\n      }\n      if (isAuto.value) {\n        return { before: slides.length, after: slides.length }\n      }\n\n      const itemsToShow = Number(config.itemsToShow)\n      const slidesToClone = Math.ceil(itemsToShow + (config.itemsToScroll - 1))\n      const before = slidesToClone - activeSlideIndex.value\n      const after = slidesToClone - (slidesCount.value - (activeSlideIndex.value + 1))\n\n      return {\n        before: Math.max(0, before),\n        after: Math.max(0, after),\n      }\n    })\n\n    const clonedSlidesOffset = computed(() => {\n      if (!clonedSlidesCount.value.before) {\n        return 0\n      }\n      if (isAuto.value) {\n        return (\n          slidesRect.value\n            .slice(-1 * clonedSlidesCount.value.before)\n            .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0) * -1\n        )\n      }\n\n      return clonedSlidesCount.value.before * effectiveSlideSize.value * -1\n    })\n\n    const snapAlignOffset = computed(() => {\n      if (isAuto.value) {\n        const slideIndex =\n          ((currentSlideIndex.value % slides.length) + slides.length) % slides.length\n        return getSnapAlignOffset({\n          slideSize: slidesRect.value[slideIndex]?.[dimension.value],\n          viewportSize: viewportRect.value[dimension.value],\n          align: config.snapAlign,\n        })\n      }\n\n      return getSnapAlignOffset({\n        align: config.snapAlign,\n        itemsToShow: +config.itemsToShow,\n      })\n    })\n    const scrolledOffset = computed(() => {\n      let output = 0\n\n      if (isAuto.value) {\n        if (currentSlideIndex.value < 0) {\n          output =\n            slidesRect.value\n              .slice(currentSlideIndex.value)\n              .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0) * -1\n        } else {\n          output = slidesRect.value\n            .slice(0, currentSlideIndex.value)\n            .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0)\n        }\n        output -= snapAlignOffset.value\n\n        // remove whitespace\n        if (!config.wrapAround) {\n          const maxSlidingValue =\n            slidesRect.value.reduce(\n              (acc, slide) => acc + slide[dimension.value] + config.gap,\n              0\n            ) -\n            viewportRect.value[dimension.value] -\n            config.gap\n\n          output = getNumberInRange({\n            val: output,\n            max: maxSlidingValue,\n            min: 0,\n          })\n        }\n      } else {\n        let scrolledSlides = currentSlideIndex.value - snapAlignOffset.value\n\n        // remove whitespace\n        if (!config.wrapAround) {\n          scrolledSlides = getNumberInRange({\n            val: scrolledSlides,\n            max: slidesCount.value - +config.itemsToShow,\n            min: 0,\n          })\n        }\n        output = scrolledSlides * effectiveSlideSize.value\n      }\n\n      return output * (isReversed.value ? 1 : -1)\n    })\n\n    const visibleRange = computed(() => {\n      if (!isAuto.value) {\n        const base = currentSlideIndex.value - snapAlignOffset.value\n        if (config.wrapAround) {\n          return {\n            min: Math.floor(base),\n            max: Math.ceil(base + Number(config.itemsToShow) - 1),\n          }\n        }\n        return {\n          min: Math.floor(\n            getNumberInRange({\n              val: base,\n              max: slidesCount.value - Number(config.itemsToShow),\n              min: 0,\n            })\n          ),\n          max: Math.ceil(\n            getNumberInRange({\n              val: base + Number(config.itemsToShow) - 1,\n              max: slidesCount.value - 1,\n              min: 0,\n            })\n          ),\n        }\n      }\n\n      // Auto width mode\n      let minIndex = 0\n      {\n        let accumulatedSize = 0\n        let index = 0 - clonedSlidesCount.value.before\n        const offset = Math.abs(scrolledOffset.value + clonedSlidesOffset.value)\n\n        while (accumulatedSize <= offset) {\n          const normalizedIndex =\n            ((index % slides.length) + slides.length) % slides.length\n          accumulatedSize +=\n            slidesRect.value[normalizedIndex]?.[dimension.value] + config.gap\n          index++\n        }\n        minIndex = index - 1\n      }\n\n      let maxIndex = 0\n      {\n        let index = minIndex\n        let accumulatedSize = 0\n        if (index < 0) {\n          accumulatedSize =\n            slidesRect.value\n              .slice(0, index)\n              .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0) -\n            Math.abs(scrolledOffset.value + clonedSlidesOffset.value)\n        } else {\n          accumulatedSize =\n            slidesRect.value\n              .slice(0, index)\n              .reduce((acc, slide) => acc + slide[dimension.value] + config.gap, 0) -\n            Math.abs(scrolledOffset.value)\n        }\n\n        while (accumulatedSize < viewportRect.value[dimension.value]) {\n          const normalizedIndex =\n            ((index % slides.length) + slides.length) % slides.length\n          accumulatedSize +=\n            slidesRect.value[normalizedIndex]?.[dimension.value] + config.gap\n          index++\n        }\n        maxIndex = index - 1\n      }\n\n      return {\n        min: Math.floor(minIndex),\n        max: Math.ceil(maxIndex),\n      }\n    })\n\n    const trackTransform: ComputedRef<string | undefined> = computed(() => {\n      if (config.slideEffect === 'fade') {\n        return undefined\n      }\n\n      const translateAxis = isVertical.value ? 'Y' : 'X'\n\n      // Include user drag interaction offset\n      const dragOffset = isVertical.value ? dragged.y : dragged.x\n\n      let totalOffset = scrolledOffset.value + dragOffset\n\n      if (!config.wrapAround && config.preventExcessiveDragging) {\n        let maxSlidingValue = 0\n        if (isAuto.value) {\n          maxSlidingValue = slidesRect.value.reduce(\n            (acc, slide) => acc + slide[dimension.value],\n            0\n          )\n        } else {\n          maxSlidingValue =\n            (slidesCount.value - Number(config.itemsToShow)) * effectiveSlideSize.value\n        }\n        const min = isReversed.value ? 0 : -1 * maxSlidingValue\n        const max = isReversed.value ? maxSlidingValue : 0\n        totalOffset = getNumberInRange({\n          val: totalOffset,\n          min,\n          max,\n        })\n      }\n      return `translate${translateAxis}(${totalOffset}px)`\n    })\n\n    const carouselStyle = computed(() => ({\n      '--vc-carousel-height': toCssValue(config.height),\n      '--vc-cloned-offset': toCssValue(clonedSlidesOffset.value),\n      '--vc-slide-gap': toCssValue(config.gap),\n      '--vc-transition-duration': isSliding.value\n        ? toCssValue(config.transition, 'ms')\n        : undefined,\n    }))\n\n    const nav: CarouselNav = { slideTo, next, prev }\n\n    const provided: InjectedCarousel = reactive({\n      activeSlide: activeSlideIndex,\n      config,\n      currentSlide: currentSlideIndex,\n      isSliding,\n      isVertical,\n      maxSlide: maxSlideIndex,\n      minSlide: minSlideIndex,\n      nav,\n      normalizedDir,\n      slideRegistry,\n      slideSize,\n      slides,\n      slidesCount,\n      viewport,\n      visibleRange,\n    })\n\n    provide(injectCarousel, provided)\n\n    const data = reactive<CarouselData>({\n      config,\n      currentSlide: currentSlideIndex,\n      maxSlide: maxSlideIndex,\n      middleSlide: middleSlideIndex,\n      minSlide: minSlideIndex,\n      slideSize,\n      slidesCount,\n    })\n\n    expose<CarouselExposed>(\n      reactive({\n        data,\n        next,\n        prev,\n        restartCarousel,\n        slideTo,\n        updateBreakpointsConfig,\n        updateSlideSize,\n        updateSlidesData,\n        ...toRefs(provided),\n      })\n    )\n\n    return () => {\n      const slotSlides = slots.default || slots.slides\n      const outputSlides = slotSlides?.(data) || []\n\n      const { before, after } = clonedSlidesCount.value\n      const slidesBefore = createCloneSlides({\n        slides,\n        position: 'before',\n        toShow: before,\n      })\n\n      const slidesAfter = createCloneSlides({\n        slides,\n        position: 'after',\n        toShow: after,\n      })\n\n      const output = [...slidesBefore, ...outputSlides, ...slidesAfter]\n\n      if (!config.enabled || !output.length) {\n        return h(\n          'section',\n          {\n            ref: root,\n            class: ['carousel', 'is-disabled'],\n          },\n          output\n        )\n      }\n\n      const addonsElements = slots.addons?.(data) || []\n\n      const trackEl = h(\n        'ol',\n        {\n          class: 'carousel__track',\n          onMousedownCapture: config.mouseDrag ? handleDragStart : null,\n          onTouchstartPassiveCapture: config.touchDrag ? handleDragStart : null,\n          onWheel: config.mouseWheel ? handleScroll : null,\n          style: { transform: trackTransform.value },\n        },\n        output\n      )\n      const viewPortEl = h('div', { class: 'carousel__viewport', ref: viewport }, trackEl)\n\n      return h(\n        'section',\n        {\n          ref: root,\n          class: [\n            'carousel',\n            `is-${normalizedDir.value}`,\n            `is-effect-${config.slideEffect}`,\n            {\n              'is-dragging': isDragging.value,\n              'is-hover': isHover.value,\n              'is-sliding': isSliding.value,\n              'is-vertical': isVertical.value,\n            },\n          ],\n          dir: normalizedDir.value,\n          style: carouselStyle.value,\n          'aria-label': config.i18n['ariaGallery'],\n          tabindex: '0',\n          onBlur: handleBlur,\n          onFocus: handleFocus,\n          onMouseenter: handleMouseEnter,\n          onMouseleave: handleMouseLeave,\n        },\n        [viewPortEl, addonsElements, h(ARIAComponent)]\n      )\n    }\n  },\n})\n","export enum IconName {\n  arrowDown = 'arrowDown',\n  arrowLeft = 'arrowLeft',\n  arrowRight = 'arrowRight',\n  arrowUp = 'arrowUp',\n}\n\nexport type IconNameValue = `${IconName}`\n\nexport type IconProps = {\n  name: IconNameValue\n  title?: string\n}\n","import { defineComponent, h, inject, PropType } from 'vue'\n\nimport { DEFAULT_CONFIG, injectCarousel } from '@/shared'\n\nimport { IconName, IconNameValue, IconProps } from './Icon.types'\n\nconst iconI18n = <Name extends IconNameValue>(name: Name) =>\n  `icon${name.charAt(0).toUpperCase() + name.slice(1)}` as `icon${Capitalize<Name>}`\n\nexport const icons = {\n  arrowDown: 'M7.41 8.59L12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z',\n  arrowLeft: 'M15.41 16.59L10.83 12l4.58-4.59L14 6l-6 6 6 6 1.41-1.41z',\n  arrowRight: 'M8.59 16.59L13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z',\n  arrowUp: 'M7.41 15.41L12 10.83l4.59 4.58L18 14l-6-6-6 6z',\n}\n\nfunction isIconName(candidate: string): candidate is IconName {\n  return candidate in IconName\n}\n\nconst validateIconName = (value: IconNameValue) => {\n  return value && isIconName(value)\n}\n\nexport const Icon = defineComponent<IconProps>({\n  props: {\n    name: {\n      type: String as PropType<IconNameValue>,\n      required: true,\n      validator: validateIconName,\n    },\n    title: {\n      type: String,\n      default: (props: { name: IconNameValue }) =>\n        props.name ? DEFAULT_CONFIG.i18n[iconI18n(props.name)] : '',\n    },\n  },\n  setup(props) {\n    const carousel = inject(injectCarousel, null)\n\n    return () => {\n      const iconName = props.name\n      if (!iconName || !validateIconName(iconName)) return\n\n      const path = icons[iconName]\n      const pathEl = h('path', { d: path })\n\n      const iconTitle: string = carousel?.config.i18n[iconI18n(iconName)] || props.title!\n\n      const titleEl = h('title', iconTitle)\n\n      return h(\n        'svg',\n        {\n          class: 'carousel__icon',\n          viewBox: '0 0 24 24',\n          role: 'img',\n          'aria-label': iconTitle,\n        },\n        [titleEl, pathEl]\n      )\n    }\n  },\n})\n","import { computed, defineComponent, h, inject, PropType } from 'vue'\n\nimport { injectCarousel, NormalizedDir } from '@/shared'\n\nimport { Icon, IconNameValue } from '../Icon'\n\nimport { NavigationProps } from './Navigation.types'\n\nexport const Navigation = defineComponent<NavigationProps>({\n  name: 'CarouselNavigation',\n  inheritAttrs: false,\n  props: {\n    carousel: {\n      type: Object as PropType<NavigationProps['carousel']>,\n    },\n  },\n  setup(props, { slots, attrs }) {\n    let carousel = inject(injectCarousel, null)!\n    const { next: slotNext, prev: slotPrev } = slots\n\n    const getPrevIcon = () => {\n      const directionIcons: Record<NormalizedDir, IconNameValue> = {\n        btt: 'arrowDown',\n        ltr: 'arrowLeft',\n        rtl: 'arrowRight',\n        ttb: 'arrowUp',\n      }\n\n      return directionIcons[carousel.normalizedDir]\n    }\n    const getNextIcon = () => {\n      const directionIcons: Record<NormalizedDir, IconNameValue> = {\n        btt: 'arrowUp',\n        ltr: 'arrowRight',\n        rtl: 'arrowLeft',\n        ttb: 'arrowDown',\n      }\n\n      return directionIcons[carousel.normalizedDir]\n    }\n\n    const prevDisabled = computed(\n      () => !carousel.config.wrapAround && carousel.currentSlide <= carousel.minSlide\n    )\n    const nextDisabled = computed(\n      () => !carousel.config.wrapAround && carousel.currentSlide >= carousel.maxSlide\n    )\n\n    return () => {\n      if (props.carousel) {\n        carousel = props.carousel;\n      }\n      if (!carousel) {\n        console.warn('[vue3-carousel]: A carousel component must be provided for the navigation component to display')\n        return '';\n      }\n      const { i18n } = carousel.config\n      const prevButton = h(\n        'button',\n        {\n          type: 'button',\n          disabled: prevDisabled.value,\n          'aria-label': i18n['ariaPreviousSlide'],\n          title: i18n['ariaPreviousSlide'],\n          onClick: carousel.nav.prev,\n          ...attrs,\n          class: [\n            'carousel__prev',\n            { 'carousel__prev--disabled': prevDisabled.value },\n            attrs.class,\n          ],\n        },\n        slotPrev?.() || h(Icon, { name: getPrevIcon() })\n      )\n      const nextButton = h(\n        'button',\n        {\n          type: 'button',\n          disabled: nextDisabled.value,\n          'aria-label': i18n['ariaNextSlide'],\n          title: i18n['ariaNextSlide'],\n          onClick: carousel.nav.next,\n          ...attrs,\n          class: [\n            'carousel__next',\n            { 'carousel__next--disabled': nextDisabled.value },\n            attrs.class,\n          ],\n        },\n        slotNext?.() || h(Icon, { name: getNextIcon() })\n      )\n\n      return [prevButton, nextButton]\n    }\n  },\n})\n","import {\n  ComputedRef,\n  computed,\n  defineComponent,\n  DeepReadonly,\n  getCurrentInstance,\n  h,\n  inject,\n  onMounted,\n  onUnmounted,\n  onUpdated,\n  provide,\n  ref,\n  SetupContext,\n  useId,\n} from 'vue'\n\nimport { injectCarousel } from '@/shared'\nimport { disableChildrenTabbing } from '@/utils'\n\nimport { SlideProps } from './Slide.types'\n\nexport const Slide = defineComponent({\n  name: 'CarouselSlide',\n  props: {\n    id: {\n      type: String,\n      default: (props: { isClone?: boolean }) => (props.isClone ? undefined : useId()),\n    },\n    index: {\n      type: Number,\n      default: undefined,\n    },\n    isClone: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  setup(props: DeepReadonly<SlideProps>, { attrs, slots, expose }: SetupContext) {\n    const carousel = inject(injectCarousel)\n    provide(injectCarousel, undefined) // Don't provide for nested slides\n\n    if (!carousel) {\n      return () => '' // Don't render, let vue warn about the missing provide\n    }\n\n    const currentIndex = ref(props.index)\n\n    const setIndex = (newIndex: number) => {\n      currentIndex.value = newIndex\n    }\n\n    const instance = getCurrentInstance()!\n\n    const getBoundingRect = () => {\n      const el = instance.vnode.el as HTMLElement\n      return el ? el.getBoundingClientRect() : { width: 0, height: 0 }\n    }\n\n    expose({\n      id: props.id,\n      setIndex,\n      getBoundingRect,\n    })\n\n    const isActive: ComputedRef<boolean> = computed(\n      () => currentIndex.value === carousel.activeSlide\n    )\n    const isPrev: ComputedRef<boolean> = computed(\n      () => currentIndex.value === carousel.activeSlide - 1\n    )\n    const isNext: ComputedRef<boolean> = computed(\n      () => currentIndex.value === carousel.activeSlide + 1\n    )\n    const isVisible: ComputedRef<boolean> = computed(\n      () =>\n        currentIndex.value >= carousel.visibleRange.min &&\n        currentIndex.value <= carousel.visibleRange.max\n    )\n\n    const slideStyle = computed(() => {\n      if (carousel.config.itemsToShow === 'auto') {\n        return\n      }\n      const itemsToShow = carousel.config.itemsToShow\n      const dimension =\n        carousel.config.gap > 0 && itemsToShow > 1\n          ? `calc(${100 / itemsToShow}% - ${\n              (carousel.config.gap * (itemsToShow - 1)) / itemsToShow\n            }px)`\n          : `${100 / itemsToShow}%`\n\n      return carousel.isVertical ? { height: dimension } : { width: dimension }\n    })\n\n    carousel.slideRegistry.registerSlide(instance, props.index)\n    onUnmounted(() => {\n      carousel.slideRegistry.unregisterSlide(instance)\n    })\n\n    if (props.isClone) {\n      // Prevent cloned slides from being focusable\n      onMounted(() => {\n        disableChildrenTabbing(instance.vnode)\n      })\n      onUpdated(() => {\n        disableChildrenTabbing(instance.vnode)\n      })\n    }\n\n    return () => {\n      if (!carousel.config.enabled) {\n        return slots.default?.()\n      }\n\n      return h(\n        'li',\n        {\n          style: [attrs.style, { ...slideStyle.value }],\n          class: {\n            carousel__slide: true,\n            'carousel__slide--clone': props.isClone,\n            'carousel__slide--visible': isVisible.value,\n            'carousel__slide--active': isActive.value,\n            'carousel__slide--prev': isPrev.value,\n            'carousel__slide--next': isNext.value,\n            'carousel__slide--sliding': carousel.isSliding,\n          },\n          onFocusin: () => {\n            // Prevent the viewport being scrolled by the focus\n            if (carousel.viewport) {\n              carousel.viewport.scrollLeft = 0\n            }\n            carousel.nav.slideTo(currentIndex.value)\n          },\n          id: props.isClone ? undefined : props.id,\n          'aria-hidden': props.isClone || undefined,\n        },\n        slots.default?.({\n          currentIndex: currentIndex.value,\n          isActive: isActive.value,\n          isClone: props.isClone,\n          isPrev: isPrev.value,\n          isNext: isNext.value,\n          isSliding: carousel.isSliding,\n          isVisible: isVisible.value,\n        })\n      )\n    }\n  },\n})\n","import { computed, defineComponent, h, inject, PropType, VNode } from 'vue'\n\nimport { injectCarousel } from '@/shared'\nimport { getSnapAlignOffset, i18nFormatter, mapNumberToRange } from '@/utils'\n\nimport { PaginationProps } from './Pagination.types'\n\nexport const Pagination = defineComponent<PaginationProps>({\n  name: 'CarouselPagination',\n  props: {\n    disableOnClick: {\n      type: Boolean,\n    },\n    paginateByItemsToShow: {\n      type: Boolean,\n    },\n    carousel: {\n      type: Object as PropType<PaginationProps['carousel']>,\n    }\n  },\n  setup(props) {\n    let carousel = inject(injectCarousel, null)!\n\n    const itemsToShow = computed(() => carousel.config.itemsToShow as number)\n    const offset = computed(() =>\n      getSnapAlignOffset({\n        align: carousel.config.snapAlign,\n        itemsToShow: itemsToShow.value,\n      })\n    )\n    const isPaginated = computed(\n      () => props.paginateByItemsToShow && itemsToShow.value > 1\n    )\n    const currentPage = computed(() =>\n      Math.ceil((carousel.activeSlide - offset.value) / itemsToShow.value)\n    )\n    const pageCount = computed(() => Math.ceil(carousel.slidesCount / itemsToShow.value))\n\n    const isActive = (slide: number): boolean =>\n      mapNumberToRange(\n        isPaginated.value\n          ? {\n              val: currentPage.value,\n              max: pageCount.value - 1,\n              min: 0,\n            }\n          : {\n              val: carousel.activeSlide,\n              max: carousel.maxSlide,\n              min: carousel.minSlide,\n            }\n      ) === slide\n\n    return () => {\n      if (props.carousel) {\n        carousel = props.carousel;\n      }\n      if (!carousel) {\n        console.warn('[vue3-carousel]: A carousel component must be provided for the pagination component to display')\n        return '';\n      }\n      const children: Array<VNode> = []\n\n      for (\n        let slide = isPaginated.value ? 0 : carousel.minSlide;\n        slide <= (isPaginated.value ? pageCount.value - 1 : carousel.maxSlide);\n        slide++\n      ) {\n        const buttonLabel = i18nFormatter(\n          carousel.config.i18n[\n            isPaginated.value ? 'ariaNavigateToPage' : 'ariaNavigateToSlide'\n          ],\n          {\n            slideNumber: slide + 1,\n          }\n        )\n        const active = isActive(slide)\n        const button = h('button', {\n          type: 'button',\n          class: {\n            'carousel__pagination-button': true,\n            'carousel__pagination-button--active': active,\n          },\n          'aria-label': buttonLabel,\n          'aria-pressed': active,\n          'aria-controls': carousel.slides[slide]?.exposed?.id,\n          title: buttonLabel,\n          disabled: props.disableOnClick,\n          onClick: () =>\n            carousel.nav.slideTo(\n              isPaginated.value\n                ? Math.floor(slide * +carousel.config.itemsToShow + offset.value)\n                : slide\n            ),\n        })\n        const item = h('li', { class: 'carousel__pagination-item', key: slide }, button)\n        children.push(item)\n      }\n\n      return h('ol', { class: 'carousel__pagination' }, children)\n    }\n  },\n})\n","<script setup>\nimport 'vue3-carousel/carousel.css'\nimport { Carousel, Slide, Navigation } from 'vue3-carousel'\n\nconst config = {\n  height: 400,\n  itemsToShow: 1,\n  gap: 20,\n  autoplay: 4000,\n  wrapAround: true,\n  pauseAutoplayOnHover: true,\n}\n</script>\n\n<template>\n  <div class=\"m-[1%] items-center justify-center\">\n    <Carousel v-bind=\"config\">\n      <Slide>\n        <img src=\"../assets/slides/1.jpg\" alt=\"image\" class=\"carousal-image\"/>\n      </Slide>\n      <Slide>\n        <img src=\"../assets/slides/2.jpg\" alt=\"image\" class=\"carousal-image\"/>\n      </Slide>\n      <Slide>\n        <img src=\"../assets/slides/3.jpg\" alt=\"image\" class=\"carousal-image\"/>\n      </Slide>\n      <Slide>\n        <img src=\"../assets/slides/4.jpg\" alt=\"image\" class=\"carousal-image\"/>\n      </Slide>\n\n      <template #addons>\n        <Navigation />\n      </template>\n    </Carousel>\n  </div>\n</template>\n\n<style>\n\n.carousel {\n  --vc-nav-background: rgba(255, 255, 255, 0.7);\n  --vc-nav-border-radius: 100%;\n  padding : 10px;\n}\n\n.carousal-image {\n  border-radius: 8px;\n  width: 100%;\n  height: 100%;\n  object-fit: contain;\n}\n\nSlide {\n  background-color:gray;\n}\n</style>\n","import script from \"./SketchSlider.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./SketchSlider.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./SketchSlider.vue?vue&type=style&index=0&id=21542e54&lang=css\"\n\nconst __exports__ = script;\n\nexport default __exports__","import script from \"./HomeView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HomeView.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_toDisplayString","_ctx","num","Math","floor","random","this","items","length","_hoisted_4","_hoisted_5","xmlns","viewBox","d","fill","_createTextVNode","$data","_hoisted_6","_hoisted_7","data","__exports__","render","BREAKPOINT_MODE_OPTIONS","DIR_MAP","DIR_OPTIONS","I18N_DEFAULT_CONFIG","ariaGallery","ariaNavigateToPage","ariaNavigateToSlide","ariaNextSlide","ariaPreviousSlide","iconArrowDown","iconArrowLeft","iconArrowRight","iconArrowUp","itemXofY","SLIDE_EFFECTS","Object","values","SNAP_ALIGN_OPTIONS","DEFAULT_MOUSE_WHEEL_THRESHOLD","DEFAULT_DRAG_THRESHOLD","DEFAULT_CONFIG","autoplay","breakpointMode","breakpoints","undefined","dir","enabled","gap","height","i18n","ignoreAnimations","itemsToScroll","itemsToShow","modelValue","mouseDrag","mouseWheel","pauseAutoplayOnHover","preventExcessiveDragging","slideEffect","snapAlign","touchDrag","transition","wrapAround","injectCarousel","Symbol","createSlideRegistry","emit","slides","shallowReactive","updateSlideIndexes","startIndex","slice","forEach","slide","offset","_a","exposed","setIndex","index","cleanup","splice","getSlides","registerSlide","props","isClone","slideIndex","unregisterSlide","indexOf","calculateAverage","numbers","sum","reduce","acc","createCloneSlides","position","toShow","clones","isBefore","start","end","i","id","key","vnode","clone","cloneVNode","el","push","FOCUSABLE_ELEMENTS_SELECTOR","disableChildrenTabbing","node","Element","elements","querySelectorAll","HTMLElement","hasAttribute","getAttribute","setAttribute","except","obj","keys","filter","k","includes","getDraggedSlidesCount","params","isVertical","isReversed","dragged","effectiveSlideSize","threshold","dragValue","y","x","dragRatio","absRatio","abs","slidesDragged","sign","round","getNumberInRange","val","max","min","isNaN","getTransformValues","transform","window","getComputedStyle","split","map","v","parseFloat","getScaleMultipliers","transformElements","widthMultiplier","heightMultiplier","transformArr","getSnapAlignOffsetByItemsToShow","align","getSnapAlignOffsetBySlideAndViewport","slideSize","viewportSize","getSnapAlignOffset","i18nFormatter","string","entries","value","replace","String","mapNumberToRange","mod","throttle","fn","ms","isThrottled","frameId","throttled","args","step","requestAnimationFrame","time","elapsed","cancel","cancelAnimationFrame","toCssValue","unit","toString","ARIA","defineComponent","name","setup","carousel","inject","h","config","currentSlide","slidesCount","useDrag","options","isTouch","startPosition","reactive","isDragging","ref","isSliding","sliding","computed","handleDragStart","event","targetTagName","target","tagName","type","touches","preventDefault","button","clientX","clientY","moveEvent","endEvent","document","addEventListener","handleDrag","passive","handleDragEnd","onDragStart","call","currentX","currentY","onDrag","deltaX","deltaY","draggedDistance","e","stopPropagation","once","capture","onDragEnd","removeEventListener","useHover","isHover","handleMouseEnter","handleMouseLeave","useWheel","vertical","handleScroll","primaryDelta","effectiveDelta","isScrollingForward","_b","onWheel","carouselProps","default","Number","validator","clamp","Boolean","normalizedDir","console","warn","Array","mouseScrollThreshold","Carousel","emits","slots","expose","slideRegistry","root","viewport","fallbackConfig","assign","currentSlideIndex","activeSlideIndex","watch","prevSlideIndex","middleSlideIndex","ceil","maxSlideIndex","minSlideIndex","autoplayTimer","transitionTimer","resizeObserver","isAuto","dimension","updateBreakpointsConfig","mounted","widthSource","getBoundingClientRect","width","innerWidth","breakpointsArray","sort","a","b","newConfig","some","breakpoint","Infinity","handleResize","updateSlidesData","updateSlideSize","Set","slidesRect","updateSlidesRectSize","rect","getBoundingRect","viewportRect","updateViewportRectSize","scaleMultipliers","totalGap","isArray","animationInterval","watchEffect","setAnimationInterval","contains","animationName","add","stepAnimation","finishAnimation","delete","size","onMounted","initAutoplay","ResizeObserver","observe","onBeforeUnmount","clearTimeout","clearInterval","disconnect","handleBlur","handleArrowKeys","ctrlKey","endsWith","next","prev","handleFocus","setInterval","resetAutoplay","stopAutoplay","_d","_c","draggedSlides","slideTo","skipTransition","targetIndex","mappedIndex","slidingToIndex","modelWatcher","pause","transitionCallback","resume","setTimeout","restartCarousel","deep","clonedSlidesCount","before","after","slidesToClone","clonedSlidesOffset","snapAlignOffset","scrolledOffset","output","maxSlidingValue","scrolledSlides","visibleRange","base","minIndex","accumulatedSize","normalizedIndex","maxIndex","trackTransform","translateAxis","dragOffset","totalOffset","carouselStyle","nav","provided","activeSlide","maxSlide","minSlide","provide","middleSlide","toRefs","slotSlides","outputSlides","slidesBefore","slidesAfter","addonsElements","addons","trackEl","onMousedownCapture","onTouchstartPassiveCapture","style","viewPortEl","tabindex","onBlur","onFocus","onMouseenter","onMouseleave","IconName","iconI18n","charAt","toUpperCase","icons","arrowDown","arrowLeft","arrowRight","arrowUp","isIconName","candidate","validateIconName","Icon","required","title","iconName","path","pathEl","iconTitle","titleEl","role","Navigation","inheritAttrs","attrs","slotNext","slotPrev","getPrevIcon","directionIcons","btt","ltr","rtl","ttb","getNextIcon","prevDisabled","nextDisabled","prevButton","disabled","onClick","nextButton","Slide","disableOnClick","paginateByItemsToShow","isPaginated","currentPage","pageCount","isActive","children","buttonLabel","slideNumber","active","item","useId","currentIndex","newIndex","instance","getCurrentInstance","isPrev","isNext","isVisible","slideStyle","onUnmounted","onUpdated","carousel__slide","onFocusin","scrollLeft"],"sourceRoot":""}